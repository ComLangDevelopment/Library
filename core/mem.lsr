
//! Explicitly runs the destructor for a value
pub drop = (x){}; // No, like rust, drop is not magic

@no_warn(intrinsic)
pub forget = (x) lib::intrinsics::forget(x);


@no_warn(intrinsic)
pub size_of = const [T] () lib::intrinsics::size_of[T]();
@no_warn(intrinsic)
pub alignment = const [T] () lib::intrinsics::alignment[T]();

pub use lib::intrinsics::zero; // Re-exporting the private api, because I'd rather zero() not typecheck in const unless T: ZeroSafe

@no_warn(unsafe_code)
pub zero_checked = const [T: ZeroSafe]() -> T lib::intrinsics::zero();

@lang_item(zerosafe)
@sealed // This is absolutely magic
// Probably the most magic the entire standard library will ever see, except maybe zero not typechecking only in const.
pub trait ZeroSafe{} 


